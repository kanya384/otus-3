basePath: /api
definitions:
  delivery.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      email:
        example: bestjohn@doe.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      phone:
        example: "+71002003040"
        type: string
      userName:
        example: johndoe589
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      email:
        example: bestjohn@doe.com
        type: string
      firstName:
        example: John
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      lastName:
        example: Doe
        type: string
      phone:
        example: "+71002003040"
        type: string
      userName:
        example: johndoe589
        type: string
    type: object
  user.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        example: bestjohn@doe.com
        type: string
      firstName:
        example: John
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        format: uuid
        type: string
      lastName:
        example: Doe
        type: string
      modifiedAt:
        type: string
      phone:
        example: "+71002003040"
        type: string
      userName:
        example: johndoe589
        type: string
    type: object
info:
  contact:
    email: kanya384@mail.ru
    name: API Support
  description: otus homeWork
  license:
    name: kanya384
  title: otus homeWork
  version: "1.0"
paths:
  /user/:
    post:
      consumes:
      - application/json
      description: Обновление пользователя.
      parameters:
      - description: Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Обновление пользователя.
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Создание пользователя.
      parameters:
      - description: Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Создание пользователя.
      tags:
      - user
  /user/{id}:
    delete:
      description: Удаление пользователя.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Удаление пользователя.
      tags:
      - user
    get:
      description: Получаем пользователя по id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Получаем пользователя по id.
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
